/**

Task Three: Build a search pipeline that combines 2 or more search operators

*/
const index = "product-search-index";
const database = "test"

use(database)

let searchTerm = "Shirt"
let categoryFilter = ["Clothing"]

db.products.aggregate([
  {
	$search: {
		index: index,
    compound: {
      must: [
        {
          text: {
            query: searchTerm,
            path: ["name", "item_keywords.value"],
            fuzzy: {
              maxEdits: 2,
              prefixLength: 0,
              maxExpansions: 50
            }
          }
        }
      ],
      filter: [
        {
          text: {
            "query": categoryFilter,
            "path": "category"
          }
        }
      ]
    }
	}
  },
  {
	  $project: {
      item_id: "$item_id",
      category: "$category",
		  name: "$name",
		  score: { $meta: "searchScore" }
	  }
  },
  {
	  $sort: {
		  score: -1
	  }
  },
  {
	  $limit: 100
  }
])